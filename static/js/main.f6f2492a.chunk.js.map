{"version":3,"sources":["components/Helper.js","components/Target.js","components/Score.js","components/App.js","index.js"],"names":["startSound","document","getElementById","songSound","bleepSound","gameOverSound","random","min","max","arguments","length","r","Math","floor","module","exports","randomColor","color","clone","obj","newObj","prop","hasOwnProperty","playStartSound","play","playSongSound","pauseSongSound","pause","playBleepSound","playGameOverSound","require","Target","nextProps","nextState","this","props","number","visibility","style","left","top","className","React","Component","Score","state","count","score","clearInterval","timer","startTime","setState","startTimer","stopTimer","round","parseInt","higherNumber","setInterval","tick","bind","timeDisplay","App","game","targets","targetNumbers","latestClick","topNumber","intervals","hitTarget","e","target","num","innerText","key","toFixed","createTarget","higherNumberClicked","startGame","gameOver","ms","push","forEach","int","prevProps","prevState","endGame","buttonStyle","display","hintStyle","fieldStyle","position","width","height","gameOverStyle","colorTarget","onMouseOver","onClick","container","ReactDOM","render"],"mappings":"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","file":"static/js/main.f6f2492a.chunk.js","sourcesContent":["var red = '#F4595B';\nvar blue = '#00aeff';\nvar green = '#4fad4c';\nvar yellow = '#f4b942';\n\nvar startSound = document.getElementById(\"start\");\nvar songSound = document.getElementById(\"song\");\nvar bleepSound = document.getElementById(\"bleep\");\nvar gameOverSound = document.getElementById(\"gameOver\");\n\nvar random = function (min, max) {\n    if (arguments.length === 1) {\n\t\tmax = min;\n\t\tmin = 0;\n\t}\n\tvar r = Math.random();\n\treturn Math.floor(r * (max - min) + min);\n};\n\nvar clone = function (obj) {\n\tvar newObj = {};\n\tfor (var prop in obj) {\n\t\tif (obj.hasOwnProperty(prop)) {\n\t\t\tnewObj[prop] = obj[prop];\n\t\t}\n\t}\n\treturn newObj;\n}\n\nvar randomColor = function () {\n\tvar color =  random(0, 4);\n\tif(color === 0){\n\t\treturn green;\n\t}else if(color === 1){\n\t\treturn blue;\n\t}else if(color === 2){\n\t\treturn yellow;\n\t}\n\treturn red;\n};\n\nvar playStartSound = function(){\n\tstartSound.play();\n}\n\nvar playSongSound = function(){\n\tsongSound.play();\n}\n\nvar pauseSongSound = function(){\n\tsongSound.pause();\n}\n\nvar playBleepSound = function(){\n\tbleepSound.play();\n}\n\nvar playGameOverSound = function(){\n\tgameOverSound.play();\n}\n\nmodule.exports = {\n\trandom: random,\n\trandomColor: randomColor,\n\tclone: clone,\n\tplayStartSound: playStartSound,\n\tplaySongSound: playSongSound,\n\tpauseSongSound: pauseSongSound,\n\tplayBleepSound: playBleepSound,\n\tplayGameOverSound: playGameOverSound\n};\n","import React from 'react';\nvar random = require('./Helper').random;\n\nclass Target extends React.Component {\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return this.props.number !== nextProps.number;\n    }\n\n    render() {\n        var visibility = this.props.number ? 'visible' : 'hidden';\n\n        var style = {\n            left: random(100) + '%',\n            top:  random(100) + '%',\n            'backgroundColor': this.props.color,\n            visibility: visibility\n        };\n\n        return <span style={style} className=\"target\" >{this.props.number}</span>\n    }\n}\n\nexport default Target;\n","import React from 'react';\n\nclass Score extends React.Component {\n\n  constructor (props) {\n    super(props)\n    this.state = {count: 0, score: 0}\n  }\n\n  componentWillUnmount () {\n    clearInterval(this.timer)\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if(nextProps.startTime && (nextProps.startTime !== this.props.startTime)){\n      this.setState({count: 0})\n      this.startTimer();\n    }else if(!nextProps.startTime){\n      this.stopTimer();\n    }\n    this.setState({score: Math.round(parseInt(this.props.higherNumber)-parseInt(this.state.count * 10))})\n  }\n\n  tick () {\n    this.setState({count: (this.state.count + 1)})\n  }\n  startTimer () {\n    this.setState({score: 0, count: 0})\n    clearInterval(this.timer)\n    this.timer = setInterval(this.tick.bind(this), 1000)\n  }\n  stopTimer () {\n    clearInterval(this.timer)\n  }\n  render () {\n\n    var timeDisplay = {\n      visibility: this.state.count > 0 ? 'visible' : 'hidden'\n    };\n\n    return (\n      <div className='timer'>\n        <h1 style={timeDisplay}>Time: {this.state.count}s</h1>\n        <h1 style={timeDisplay}>Top: {this.props.higherNumber}</h1>\n        <h1 style={timeDisplay}>Score: {this.state.score}</h1>\n      </div>\n    )\n  }\n}\n\nexport default Score;\n","import React from 'react';\nvar random = require('./Helper').random;\nvar randomColor = require('./Helper').randomColor;\nvar clone = require('./Helper').clone;\n//var Display = require('./Display');\nvar Target = require('./Target');\nvar Score = require('./Score');\n\n/*\nvar playStartSound = require('./Helper').playStartSound;\nvar playSongSound = require('./Helper').playSongSound;\nvar pauseSongSound = require('./Helper').pauseSongSound;\nvar playBleepSound = require('./Helper').playBleepSound;\nvar playGameOverSound = require('./Helper').playGameOverSound;\nvar Ranking = require('./Ranking');\n*/\n\nclass App extends React.Component {\n\n    state = {\n      game: false,\n      targets: {},\n      targetNumbers: 1,\n      latestClick: 0,\n      topNumber: 200,\n      higherNumber: 0\n    }\n\n    intervals=  null;\n\n    createTarget(key, ms) {\n        ms = ms || random(1000, 2000);\n        this.setState(\n            {\n                targetNumbers: this.state.targetNumbers + 1,\n            }\n        );\n        this.intervals.push(setInterval(function(){\n            var targets = clone(this.state.targets);\n            var num = random(1, this.state.topNumber) + random(1, this.state.topNumber);\n            targets[key] = targets[key] !== 0 ? 0 : num;\n            this.setState({ targets: targets });\n        }.bind(this), ms));\n    }\n\n    hitTarget = (e) => {\n        if (e.target.className !== 'target') return;\n        var num = parseInt(e.target.innerText);\n        if(this.state.targetNumbers < 24){\n            var key = Math.random().toFixed(4);\n            this.createTarget(key);\n        }\n\n        var top = this.state.topNumber;\n        var higherNumberClicked = this.state.higherNumber;\n        if(num > higherNumberClicked){\n            higherNumberClicked = num;\n            //playBleepSound();\n        }\n        this.setState({ higherNumber: higherNumberClicked, latestClick: num, topNumber: top + 200 });\n    }\n\n    startGame = () => {\n        //playSongSound();\n        this.createTarget('first', 5000);\n        this.setState({\n            game: true,\n            gameOver: false,\n            latestClick:  0,\n            topNumber:    200,\n            higherNumber: 0,\n            targetNumbers: 1\n        });\n    }\n\n    playStartSound = () => {\n        //playStartSound();\n    }\n\n    endGame() {\n        //pauseSongSound();\n        //playGameOverSound();\n        this.intervals.forEach(function(int){\n            clearInterval(int);\n        });\n        this.intervals = [];\n        this.setState({\n            game:         false,\n            gameOver:     true,\n            targets:      {},\n            latestClick:  0,\n            targetNumbers: 1\n        });\n    }\n\n    UNSAFE_componentWillMount() {\n        this.intervals = [];\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.latestClick < prevState.latestClick) {\n            this.endGame();\n        }\n    }\n\n    render() {\n\n        var buttonStyle = {\n            display: this.state.game ? 'none' : 'inline-block'\n        };\n\n        var hintStyle = {\n            display: this.state.game ? 'none' : 'block'\n        };\n\n        var fieldStyle = {\n            visibility: this.state.game ? 'visible' : 'hidden',\n            position:'absolute',\n            width: '85%',\n            left: '5%',\n            height: '70%'\n        }\n\n        var gameOverStyle = {\n            visibility: this.state.gameOver ? 'visible' : 'hidden'\n        };\n\n        var targets = [];\n        var colorTarget = randomColor();\n        for (var key in this.state.targets) {\n            targets.push(\n                <Target color={colorTarget} number={this.state.targets[key]} key={key} />\n            );\n        }\n\n        return (\n            <div>\n                <Score startTime={this.state.game} higherNumber={this.state.higherNumber} />\n\n                <div style={buttonStyle}>\n                    <div style={gameOverStyle} className='gameOver'>Game Over!</div>\n\n                    <button style={buttonStyle} onMouseOver={this.playStartSound} onClick={this.startGame}>New Game </button>\n\n                    <div style={hintStyle} className='hint'>Click a higher number every time!</div>\n                </div>\n\n                <div style={fieldStyle} onClick={this.hitTarget} >{targets}</div>\n            </div>\n    );\n  }\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './global.css';\n\nconst container = document.getElementById('app');\n\nReactDOM.render(<App />, container);\n"],"sourceRoot":""}